"""
Django settings for technofresh project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '+4ve9)wwdu3hg)s#28zc7u(gak7jor*z4&el+(foinc!$q%!y-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []
EMAIL_HOST = 'smtp.gmail.com'

EMAIL_HOST_USER='ajaymundhe21@gmail.com'
EMAIL_HOST_PASSWORD= '9763683339'
EMAIL_PORT=587
EMAIL_USE_TLS='TRUE'
DEFAULT_FROM_EMAIL='Ajay <ajaymundhe21@gmail.com>'
BASE_URL = '127.0.0.1:8000'
MANAGERS=( 
    ('Ajay','ajaymundhe21@gmail.com'),
)
#for prducion base url will be www.technofresh 
ADMINS = MANAGERS
'''https://accounts.google.com/DisplayUnlockCaptcha'''

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crispy_forms',
    #third party apps
    'material',
    'material.frontend',
    'imagekit',
    'storages',
    'paypal.standard.ipn',
    #myapps
    'accounts',
    'addresses',
    'analytics',
    'banner',
    'billing',
    'carts',
    'products',
    'search',
    'orders',
    'offersimages',
    'tags',
    #'paytm',
]
PAYPAL_RECEIVER_EMAIL = 'ajaymundhe21@gmail.com'
PAYPAL_TEST = True
AUTH_USER_MODEL ='accounts.User' #change to built-in user model to ours
LOGIN_URL   ='/login/'

FORCE_SESSION_TO_ONE =  False
FORCE_INACTIVE_USER_ENDSESSION=  False


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


LOGOUT_REDIRECT_URL = '/login/'
ROOT_URLCONF = 'technofresh.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'technofresh.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True
CART_SESSION_ID = 'cart'
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/
CRISPY_TEMPLATE_PACK = 'bootstrap3'

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]


CRISPY_TEMPLATE_PACK = 'bootstrap4'
PROTECTED_ROOT = os.path.join(os.path.dirname(BASE_DIR), "static_cdn", "protected_media")

PAYTM_MERCHANT_KEY = ""
PAYTM_MERCHANT_ID = ""
HOST_URL = "http://192.168.5.36:8080"
PAYTM_CALLBACK_URL = "/paytm/response/"

if DEBUG:
    PAYTM_MERCHANT_KEY = "9ccMxVEjv1AQ9w4E"
    PAYTM_MERCHANT_ID = "24Moti74996871795912"
    PAYTM_WEBSITE = 'DIYtestingweb'
    HOST_URL = 'http://127.0.0.1:8000:'
    '''
    In sandbox enviornment you can use following wallet credentials to login and make payment.
    Mobile Number : 7777777777
    Password : Paytm12345
    This test wallet is topped-up to a balance of 7000 Rs. every 5 minutes.
    '''
PAYU_INFO = {
              'merchant_key': "cPRE9tvJ",

             'merchant_salt': "Bo6ZChBPDS",
             # for production environment use 'https://secure.payu.in/_payment'
             'payment_url': 'https://test.payu.in/_payment',
             'surl':'http://technofresh-demo.herokuapp.com/pay-success/',
             'furl':'http://24motionpicture.com/failure/',
             'curl':'http://example.com/cancel/',
}
from technofresh.aws.conf import *

CORS_REPLACE_HTTPS_REFERER      = False
HOST_SCHEME                     = "http://"
SECURE_PROXY_SSL_HEADER         = None
SECURE_SSL_REDIRECT             = False
SESSION_COOKIE_SECURE           = False
CSRF_COOKIE_SECURE              = False
SECURE_HSTS_SECONDS             = None
SECURE_HSTS_INCLUDE_SUBDOMAINS  = False
SECURE_FRAME_DENY               = False